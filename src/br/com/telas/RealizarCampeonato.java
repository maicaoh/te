/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.telas;

import br.com.bean.Campeonato;
import br.com.bean.Equipe;
import br.com.bean.GradeDeTime;
import br.com.controller.CampeonatoController;
import br.com.controller.ClassificacaoController;
import javax.swing.DefaultListModel;
import br.com.controller.EquipeController;
import java.util.ArrayList;
import javax.swing.JList;
import javax.swing.JOptionPane;
import br.com.controller.JogoController;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Michael
 */
public class RealizarCampeonato extends javax.swing.JInternalFrame {

    /**
     * Creates new form RealizarCampeonato
     */
    public RealizarCampeonato() {
        initComponents();
        preencherListaDeEquipes();
        preencherCbNomeCampeonato();
        JOptionPane.showMessageDialog(null, "Selecione a equipe na lista esquerda e clique em adicione para increver o clube na competição, para remover uma equipe inscrita basta seleciona-lá e clicar em remover");
    }
    EquipeController eq = new EquipeController();
    CampeonatoController campControl = new CampeonatoController();
    JogoController jogoControl = new JogoController();
    DefaultListModel listSelecionados = new DefaultListModel();
    DefaultListModel listaParaSelecao = new DefaultListModel();
    ArrayList<String> listaDeEquipesString = new ArrayList<String>();
    int rodada;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.y
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaEquipesSelecionar = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaEquipesSelecionadas = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cbCampeonato = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbClassificacao = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setMinimumSize(new java.awt.Dimension(660, 541));
        setPreferredSize(new java.awt.Dimension(660, 541));

        jScrollPane1.setViewportView(listaEquipesSelecionar);

        jLabel1.setText("Selecione as Equipes");

        jScrollPane2.setViewportView(listaEquipesSelecionadas);

        jLabel2.setText("Equipes Adicionadas");

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Remover");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cbCampeonato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCampeonatoActionPerformed(evt);
            }
        });

        jLabel3.setText("Campeonato:");

        jButton3.setText("JOGAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane4.setViewportView(txtArea);

        jLabel4.setText("Partidas");

        jLabel5.setText("Classificação");

        tbClassificacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipe", "Pontos", "Vitoria", "Empate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbClassificacao);
        if (tbClassificacao.getColumnModel().getColumnCount() > 0) {
            tbClassificacao.getColumnModel().getColumn(0).setResizable(false);
            tbClassificacao.getColumnModel().getColumn(1).setResizable(false);
            tbClassificacao.getColumnModel().getColumn(2).setResizable(false);
            tbClassificacao.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbCampeonato, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(jLabel4)
                .addGap(242, 242, 242)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(79, 79, 79)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(jLabel2)))
                        .addGap(290, 290, 290))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCampeonato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(36, 36, 36)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(305, 305, 305))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        public void preencherCbNomeCampeonato() {
        cbCampeonato.addItem("Selecione");
        for (String nome : campControl.consultaNomeCampeonato()) {
            cbCampeonato.addItem(nome);
        }
    }

    public void preencherListaDeEquipes() {

        ArrayList<String> listaDeNomes;
        listaDeNomes = eq.consultaNomeEquipe();
        for (int i = 0; i < listaDeNomes.size(); i++) {
            listaParaSelecao.addElement(listaDeNomes.get(i));

        }
        listaEquipesSelecionar.setModel(listaParaSelecao);
    }

    public void addItemCompeticao(JList destino, JList origem) {
        if (listaParaSelecao.size() > 0) {
            String nomeEquipe = origem.getSelectedValue().toString();
            listaDeEquipesString.add(nomeEquipe);
            destino.setModel(listSelecionados);
            listSelecionados.addElement(nomeEquipe);
            listaParaSelecao.removeElementAt(origem.getSelectedIndex());
        } else {
            JOptionPane.showMessageDialog(null, "Operação Inválida!");
        }
    }

    public void RemoverItemCompeticao(JList destino, JList origem) {
        if (listSelecionados.size() > 0) {
            String nomeEquipe = origem.getSelectedValue().toString();
            listaDeEquipesString.remove(nomeEquipe);
            destino.setModel(listaParaSelecao);
            listaParaSelecao.addElement(nomeEquipe);
            listSelecionados.removeElementAt(origem.getSelectedIndex());
        } else {
            JOptionPane.showMessageDialog(null, "Operação Inválida!");
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (listaEquipesSelecionadas.getSelectedValue() != null) {
            RemoverItemCompeticao(listaEquipesSelecionar, listaEquipesSelecionadas);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (listaEquipesSelecionar.getSelectedValue() != null) {

            addItemCompeticao(listaEquipesSelecionadas, listaEquipesSelecionar);

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbCampeonatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCampeonatoActionPerformed

    }//GEN-LAST:event_cbCampeonatoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (listSelecionados.size() > 2) {
            if (jogoControl.verificarCampeonatoControll(cbCampeonato.getSelectedItem().toString()) == 0) {
                if (!cbCampeonato.getSelectedItem().toString().equals("Selecione")) {
                    Campeonato campeonato = campControl.consultaCampControl(cbCampeonato.getSelectedItem().toString());

                    ArrayList<Equipe> arrayEquipe = new ArrayList<Equipe>();

                    for (int i = 0; i < listaDeEquipesString.size(); i++) {
                        arrayEquipe.add(eq.consultaequipeControl(listaDeEquipesString.get(i)));
                    }
                    System.out.println(listaDeEquipesString.size());
                    for (int i = 1; i < listaDeEquipesString.size(); i++) {

                        for (int j = i + 1; j <= listaDeEquipesString.size(); j++) {

                            jogoControl.cadastroPartidaController(campeonato.getIdCampeonato(), arrayEquipe.get(i - 1).getId(), arrayEquipe.get(j - 1).getId());

                        }
                    }
                    classificacaoGeral();
                    txtArea.setText(jogoControl.partidasControll(campControl.consultaCampControl(cbCampeonato.getSelectedItem().toString()).getIdCampeonato()));
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione o campeonato!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Campeonato ja Jogado!");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione ao menos 3 Equipes!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void classificacaoGeral() {
        ClassificacaoController classControl = new ClassificacaoController();
        DefaultTableModel model = (DefaultTableModel) tbClassificacao.getModel();
        Object rowData[] = new Object[4];
        int idCampeonato = campControl.consultaCampControl(cbCampeonato.getSelectedItem().toString()).getIdCampeonato();
        ArrayList<GradeDeTime> listClass = new ArrayList<GradeDeTime>();

        int tamanho = classControl.gerarClassificacaoController(idCampeonato).size();
        for (int i = 0; i < tamanho; i++) {
            listClass.add(classControl.gerarClassificacaoController(idCampeonato).get(i));
        }
        for (int i = 0; i < listClass.size(); i++) {
            rowData[0] = listClass.get(i).getEquipe();
            rowData[1] = listClass.get(i).getPontos();
            rowData[2] = listClass.get(i).getVitoria();
            rowData[3] = listClass.get(i).getEmpate();

            model.addRow(rowData);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCampeonato;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> listaEquipesSelecionadas;
    private javax.swing.JList<String> listaEquipesSelecionar;
    private javax.swing.JTable tbClassificacao;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
